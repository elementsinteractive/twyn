# This workflow will publish our package on pypi

name: Publish

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  push_to_pypi:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6 # v6.6.1
      - name: Publish to pypi
        run: |
          uv build
          uv publish

  push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Log in to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: ./.github/actions/docker-build
        with:
          push-image: "true"
          platforms: linux/amd64,linux/arm64
          dockerfile: ./Dockerfile
          context: .
          image-name: elementsinteractive/twyn
          cache-from: type=registry,ref=ghcr.io/elementsinteractive/twyn:buildcache
          cache-to: type=registry,ref=ghcr.io/elementsinteractive/twyn:buildcache,mode=max,compression=zstd,force-compression=true,oci-mediatypes=true

      - name: Delete old cache entries
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Get all versions of the container package
          versions=$(gh api "orgs/elementsinteractive/packages/container/twyn/versions" --paginate)

          # Extract version IDs that do NOT have the 'buildcache' tag
          ids_to_delete=$(echo "$versions" | jq -r '.[] | select(.metadata.container.tags | index("buildcache") | not) | .id')

          # Delete them
          for id in $ids_to_delete; do
            echo "Deleting old cache version ID: $id"
            gh api -X DELETE "orgs/elementsinteractive/packages/container/twyn/versions/$id"
          done
  release_notes:
    runs-on: ubuntu-latest
    needs: [push_to_pypi, push_to_docker_hub]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Release
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 #v2.3.3
        with:
          generate_release_notes: true
          token: "${{ secrets.GITHUB_TOKEN }}"
