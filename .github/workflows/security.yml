# This workflow will run some security checks against our project

name: Security

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  generate-dependencies-file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Create dependencies file
        run: |
          UV_PROJECT_ENVIRONMENT=.venv uv sync
          UV_PROJECT_ENVIRONMENT=.venv uv pip freeze > requirements.txt
      - uses: actions/upload-artifact@v4
        with:
          name: requirements
          path: requirements.txt
          overwrite: true

  osv-scanner:
    needs: generate-dependencies-file
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/google/osv-scanner:v1.9.2
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: requirements
      - name: Run OSV Scanner
        run: |
          /osv-scanner --skip-git --format table -r .
  semgrep:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep:latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Semgrep
        run: |
          semgrep scan --config auto
  twyn:
    needs: generate-dependencies-file
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: requirements
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Run Twyn against our dependencies
        run: |
          uv run twyn --version
          uv run twyn run -vv
